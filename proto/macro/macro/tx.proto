syntax = "proto3";
package macro.macro;

option go_package = "github.com/vuong177/macro/x/macro/types";

import "gogoproto/gogo.proto";

// Msg defines the Msg service.
service Msg {
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  rpc MintStableCoin(MsgMintStableCoin) returns (MsgMintStableCoinResponse);
  rpc WithdrawCollateral(MsgWithdrawCollateral) returns (MsgWithdrawCollateralResponse);

}

message MsgDeposit {
  // minter
  string from_address = 1 [(gogoproto.moretags) = "yaml:\"from_address\"" ];
  // collateral asset
  string deposit_coin = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.moretags) = "yaml:\"deposit_coin\"",
    (gogoproto.nullable) = false
  ]; 
}

message MsgDepositResponse {}

message MsgMintStableCoin {
  // minter
  string minter = 1 [(gogoproto.moretags) = "yaml:\"minter\"" ];
  // collateral asset
  string request_amount = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"request_amount\"",
    (gogoproto.nullable) = false
  ]; 
}

message MsgMintStableCoinResponse {}

message MsgWithdrawCollateral {
  // minter
  string minter = 1 [(gogoproto.moretags) = "yaml:\"minter\"" ];
  // collateral asset
  string collateral_asset = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.moretags) = "yaml:\"collateral_asset\"",
    (gogoproto.nullable) = false
  ]; 
}

message MsgWithdrawCollateralResponse {}

message MsgRepay{
  //repayer 
  string repayer = 1 [(gogoproto.moretags) = "yaml:\"repayer\"" ];
  string amount = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgRepayResponse{}